-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-07-06 21:08:17 BRT
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g


/*
DROP TABLE dim_data CASCADE CONSTRAINTS;

DROP TABLE dim_idade CASCADE CONSTRAINTS;

DROP TABLE dim_ident_mae CASCADE CONSTRAINTS;

DROP TABLE dim_localidade CASCADE CONSTRAINTS;

DROP TABLE dim_raca CASCADE CONSTRAINTS;

DROP TABLE dim_sexo CASCADE CONSTRAINTS;

DROP TABLE dim_situacoes_parto CASCADE CONSTRAINTS;

DROP TABLE fato_qtdds CASCADE CONSTRAINTS;
*/

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

--  Dimensão Data com dia, mês e ano dos registros. O Grão dessa dimensão é o
--  dia.
CREATE TABLE dim_data (
    sk_data     INTEGER NOT NULL,
    ano         INTEGER NOT NULL,
    mes         INTEGER NOT NULL,
    dia         INTEGER NOT NULL,
    data        DATE NOT NULL,
    dim_data_id NUMBER NOT NULL
);

COMMENT ON TABLE dim_data IS
    'Dimensão Data com dia, mês e ano dos registros. O Grão dessa dimensão é o dia.';

ALTER TABLE dim_data ADD CONSTRAINT dim_data_pk PRIMARY KEY ( dim_data_id );

ALTER TABLE dim_data ADD CONSTRAINT dim_data_sk_data_un UNIQUE ( sk_data );

CREATE TABLE dim_idade (
    sk_idade  INTEGER NOT NULL, 
--  Codigo de Idade tal qual aparece no SIM
    cd_idade  INTEGER NOT NULL, 
--  Codigo da escala na qual esta a idade da pessoa que veio a obito
    nr_escala SMALLINT NOT NULL, 
--  Escala na qual está armazenada a informacao de idade
    nm_escala VARCHAR2(15 CHAR) NOT NULL, 
--  Numero da Idade da pessoa falecida
    nr_idade  INTEGER NOT NULL
);

COMMENT ON COLUMN dim_idade.cd_idade IS
    'Codigo de Idade tal qual aparece no SIM';

COMMENT ON COLUMN dim_idade.nr_escala IS
    'Codigo da escala na qual esta a idade da pessoa que veio a obito';

COMMENT ON COLUMN dim_idade.nm_escala IS
    'Escala na qual está armazenada a informacao de idade';

COMMENT ON COLUMN dim_idade.nr_idade IS
    'Numero da Idade da pessoa falecida';

ALTER TABLE dim_idade ADD CONSTRAINT dim_idade_pk PRIMARY KEY ( sk_idade );

--  Dimensão com informações da identidade da mãe
CREATE TABLE dim_ident_mae (
    sk_ident_mae INTEGER NOT NULL, 
--  Idade da mãe
    cd_idade_mae INTEGER NOT NULL
);

COMMENT ON TABLE dim_ident_mae IS
    'Dimensão com informações da identidade da mãe';

COMMENT ON COLUMN dim_ident_mae.cd_idade_mae IS
    'Idade da mãe';

ALTER TABLE dim_ident_mae ADD CONSTRAINT dim_ident_mae_pk PRIMARY KEY ( sk_ident_mae );

--  Localidade do nascimento ou óbito. O Grão dessa dimensão é o municipio.
CREATE TABLE dim_localidade (
    sk_localidade INTEGER NOT NULL, 
--  Codigo do municipio no IBGE
    cd_municipio  INTEGER NOT NULL,
    nm_municipio  VARCHAR2(50 CHAR) NOT NULL, 
--  Sigla do Estado onde ocorreu o nascimento ou obito.
    sg_uf         CHAR(2 CHAR) NOT NULL, 
--  Nome da Regiao a que pertence a UF
    nm_regiao     VARCHAR2(12 CHAR) NOT NULL
);

COMMENT ON TABLE dim_localidade IS
    'Localidade do nascimento ou óbito. O Grão dessa dimensão é o municipio.';

COMMENT ON COLUMN dim_localidade.cd_municipio IS
    'Codigo do municipio no IBGE';

COMMENT ON COLUMN dim_localidade.sg_uf IS
    'Sigla do Estado onde ocorreu o nascimento ou obito.';

COMMENT ON COLUMN dim_localidade.nm_regiao IS
    'Nome da Regiao a que pertence a UF';

ALTER TABLE dim_localidade ADD CONSTRAINT dim_localidade_pk PRIMARY KEY ( sk_localidade );

CREATE TABLE dim_raca (
    sk_raca INTEGER NOT NULL, 
--  Cor ou raça da pessoa nascida ou falecida
    nm_raca VARCHAR2(10 CHAR) NOT NULL
);

COMMENT ON COLUMN dim_raca.nm_raca IS
    'Cor ou raça da pessoa nascida ou falecida';

ALTER TABLE dim_raca ADD CONSTRAINT dim_raca_pk PRIMARY KEY ( sk_raca );

CREATE TABLE dim_sexo (
    sk_sexo INTEGER NOT NULL, 
--  Sexo biologico da pessoa nascida ou que veio a obito
    nm_sexo VARCHAR2(10 CHAR) NOT NULL
);

COMMENT ON COLUMN dim_sexo.nm_sexo IS
    'Sexo biologico da pessoa nascida ou que veio a obito';

ALTER TABLE dim_sexo ADD CONSTRAINT dim_sexo_pk PRIMARY KEY ( sk_sexo );

--  Dimensão com os dados sobre a situação da mãe no parto.
CREATE TABLE dim_situacoes_parto (
    sk_sit_parto        INTEGER NOT NULL, 
--  Quantidade de Semanas de Gestacao
    nr_semanas_gestacao INTEGER NOT NULL
);

COMMENT ON TABLE dim_situacoes_parto IS
    'Dimensão com os dados sobre a situação da mãe no parto.';

COMMENT ON COLUMN dim_situacoes_parto.nr_semanas_gestacao IS
    'Quantidade de Semanas de Gestacao';

ALTER TABLE dim_situacoes_parto ADD CONSTRAINT dim_situacoes_parto_pk PRIMARY KEY ( sk_sit_parto );

--  Tabela fato com as quantidades de pessoas nascidas vivas e quantidade de
--  mães que vieram a óbito.
CREATE TABLE fato_qtdds (
    sk_fato                          INTEGER NOT NULL, 
--  Quantidade de pessoas nascidas vivas.
    qtdd_nascidos_vivos              INTEGER NOT NULL, 
--  Quantidade de mães que vieram a óbito.
    qtdd_obitos_maternos             INTEGER NOT NULL,
    dim_data_sk_data                 INTEGER NOT NULL,
    dim_localidade_sk_localidade     INTEGER NOT NULL,
    dim_ident_mae_sk_ident_mae       INTEGER NOT NULL, 
--  ERROR: Column name length exceeds maximum allowed length(30) 
    dim_situacoes_parto_sk_sit_parto INTEGER NOT NULL,
    dim_sexo_sk_sexo                 INTEGER NOT NULL,
    dim_idade_sk_idade               INTEGER NOT NULL,
    dim_raca_sk_raca                 INTEGER NOT NULL
);

COMMENT ON TABLE fato_qtdds IS
    'Tabela fato com as quantidades de pessoas nascidas vivas e quantidade de mães que vieram a óbito.';

COMMENT ON COLUMN fato_qtdds.qtdd_nascidos_vivos IS
    'Quantidade de pessoas nascidas vivas.';

COMMENT ON COLUMN fato_qtdds.qtdd_obitos_maternos IS
    'Quantidade de mães que vieram a óbito.';

ALTER TABLE fato_qtdds
    ADD CONSTRAINT fato_qtdds_pk PRIMARY KEY ( sk_fato,
                                               dim_data_sk_data,
                                               dim_localidade_sk_localidade,
                                               dim_ident_mae_sk_ident_mae,
                                               dim_situacoes_parto_sk_sit_parto,
                                               dim_sexo_sk_sexo,
                                               dim_idade_sk_idade,
                                               dim_raca_sk_raca );

ALTER TABLE fato_qtdds
    ADD CONSTRAINT fato_qtdds_dim_data_fk FOREIGN KEY ( dim_data_sk_data )
        REFERENCES dim_data ( sk_data );

ALTER TABLE fato_qtdds
    ADD CONSTRAINT fato_qtdds_dim_idade_fk FOREIGN KEY ( dim_idade_sk_idade )
        REFERENCES dim_idade ( sk_idade );

ALTER TABLE fato_qtdds
    ADD CONSTRAINT fato_qtdds_dim_ident_mae_fk FOREIGN KEY ( dim_ident_mae_sk_ident_mae )
        REFERENCES dim_ident_mae ( sk_ident_mae );

ALTER TABLE fato_qtdds
    ADD CONSTRAINT fato_qtdds_dim_localidade_fk FOREIGN KEY ( dim_localidade_sk_localidade )
        REFERENCES dim_localidade ( sk_localidade );

ALTER TABLE fato_qtdds
    ADD CONSTRAINT fato_qtdds_dim_raca_fk FOREIGN KEY ( dim_raca_sk_raca )
        REFERENCES dim_raca ( sk_raca );

ALTER TABLE fato_qtdds
    ADD CONSTRAINT fato_qtdds_dim_sexo_fk FOREIGN KEY ( dim_sexo_sk_sexo )
        REFERENCES dim_sexo ( sk_sexo );

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE fato_qtdds
    ADD CONSTRAINT fato_qtdds_dim_situacoes_parto_fk FOREIGN KEY ( dim_situacoes_parto_sk_sit_parto )
        REFERENCES dim_situacoes_parto ( sk_sit_parto );

CREATE SEQUENCE dim_data_dim_data_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER dim_data_dim_data_id_trg BEFORE
    INSERT ON dim_data
    FOR EACH ROW
    WHEN ( new.dim_data_id IS NULL )
BEGIN
    :new.dim_data_id := dim_data_dim_data_id_seq.nextval;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                             8
-- CREATE INDEX                             0
-- ALTER TABLE                             16
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           1
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          1
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   2
-- WARNINGS                                 0

